version: '3.5'

networks:
  internal:
  ingress:
    name: traefik-public
    external: true
  bus:
    name: bus
    external: true

services:

  register:
    image: cr.gitlab.switch.ch/hslu/edu/bachelor-computer-science/swda/shared/registry/register-service:1.0.0
    environment:
      - 'RABBITMQ_URL=amqp://swda:swda@bus:5672/'
      - 'DB_URL=mongodb://mongodb:27017'
      - 'DB_USER=root'
      - 'DB_PASSWORD=root'
    networks:
      - internal
      - bus
    deploy:
      replicas: 1
  
  statistics:
    image: cr.gitlab.switch.ch/hslu/edu/bachelor-computer-science/swda/shared/registry/statistics-service:1.0.0
    environment:
      - 'RABBITMQ_URL=amqp://swda:swda@bus:5672/'
    networks:
      - bus
    deploy:
      replicas: 1
  
  dashboard-backend:
    image: cr.gitlab.switch.ch/hslu/edu/bachelor-computer-science/swda/shared/registry/dashboard-service/backend:1.0.0
    environment:
      - 'RABBITMQ_URL=amqp://swda:swda@bus:5672/'
    networks:
      - bus
      - ingress
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.${CICD_STACK_NAME}DashboardBackend.rule=Host(`api.dashboard.demo.${TLD}`)'
        - 'traefik.http.services.${CICD_STACK_NAME}DashboardBackend.loadbalancer.server.port=8090'
        - 'traefik.http.routers.${CICD_STACK_NAME}DashboardBackend.entrypoints=websecure'
        - 'traefik.http.routers.${CICD_STACK_NAME}DashboardBackend.tls.certresolver=letsencrypt'

  dashboard-frontend:
    image: cr.gitlab.switch.ch/hslu/edu/bachelor-computer-science/swda/shared/registry/dashboard-service/frontend:1.0.0
    environment:
      - 'SERVER_URL=https://api.dashboard.demo.${TLD}'
    networks:
      - ingress
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.${CICD_STACK_NAME}DashboardFrontend.rule=Host(`dashboard.demo.${TLD}`)'
        - 'traefik.http.services.${CICD_STACK_NAME}DashboardFrontend.loadbalancer.server.port=80'
        - 'traefik.http.routers.${CICD_STACK_NAME}DashboardFrontend.entrypoints=websecure'
        - 'traefik.http.routers.${CICD_STACK_NAME}DashboardFrontend.tls.certresolver=letsencrypt'

  mongodb:
    image: cr.gitlab.switch.ch/hslu/shared/devops/docker-cache/bitnami/mongodb:4.2.19
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'root'
    networks:
      - internal
    deploy:
      replicas: 1

  mongo-viewer:
    image: cr.gitlab.switch.ch/hslu/shared/devops/docker-cache/mongo-express:0.54
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: 'root'
      ME_CONFIG_MONGODB_ADMINPASSWORD: 'root'
    networks:
      - internal
      - ingress
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.${CICD_STACK_NAME}Dbms.rule=Host(`db.demo.${TLD}`)'
        - 'traefik.http.services.${CICD_STACK_NAME}Dbms.loadbalancer.server.port=8081'
        - 'traefik.http.routers.${CICD_STACK_NAME}Dbms.entrypoints=websecure'
        - 'traefik.http.routers.${CICD_STACK_NAME}Dbms.tls.certresolver=letsencrypt'
